/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (() => {

eval("const taskList = document.querySelector(\".task-list\");\nconst clearBtn = document.querySelector('.clear-btn');\nconst filterAll = document.querySelector('.all-btn');\nconst filterActive = document.querySelector('.active-btn');\nconst filterCompleted = document.querySelector('.completed-btn');\nfilterAll.style.color = \"#3A7CFD\";\n\nfunction saveTasksToStorage() {\n  const tasks = [];\n  document.querySelectorAll('.task').forEach(taskDiv => {\n    tasks.push({\n      title: taskDiv.querySelector('.task-text').textContent,\n      description: taskDiv.querySelector('.task-desc').textContent,\n      date: taskDiv.querySelector('.task-date').textContent,\n      completed: taskDiv.querySelector('.task-checkbox').checked\n    });\n  });\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n}\n\nfunction loadTasksFromStorage() {\n  const savedTasks = localStorage.getItem('tasks');\n  if (savedTasks) {\n    const tasks = JSON.parse(savedTasks);\n    tasks.forEach((taskData, index) => {\n      const task = new Task(taskData.title);\n      taskIndex = index + 1;\n      task.createTask(taskIndex);\n      \n      // Set additional task data\n      const taskDiv = document.querySelectorAll('.task')[index];\n      taskDiv.querySelector('.task-desc').textContent = taskData.description;\n      taskDiv.querySelector('.task-date').textContent = taskData.date;\n      taskDiv.querySelector('.task-checkbox').checked = taskData.completed;\n    });\n    updateCounter(\"active\");\n  }\n}\n\n\nfunction resetButtonStyles() {\n  const filterButtons = document.querySelectorAll('#btn');\n  filterButtons.forEach(button => {\n    button.style.color = \"\";\n  });\n}\n\nfunction removeTask(checkbox) {\n  const taskDiv = checkbox.closest(\".task\");\n  taskDiv.remove();\n  saveTasksToStorage();\n  if(taskList.classList.contains('completed-active')) {\n    updateCounter(\"completed\");\n  } else {\n    updateCounter(\"active\");\n  }\n}\n\nfunction updateCounter(choice) {\n  const taskCount = document.querySelector('.task-count');\n  const tasks = document.querySelectorAll('.task');\n  const completedTasks = document.querySelectorAll('.task-checkbox:checked').length;\n  const activeTasks = tasks.length - completedTasks;\n  if (choice === \"active\") {\n    taskCount.textContent = `${activeTasks} items left`;\n  } else if (choice === \"completed\") {\n    taskCount.textContent = `${completedTasks} items completed`;\n  }\n}\n\n// Select modal elements\nconst modal = document.getElementById(\"task-modal\");\nconst closeModal = document.getElementById(\"close-modal\");\nconst modalTaskTitle = document.getElementById(\"modal-task-title\");\nconst modalTaskDesc = document.getElementById(\"modal-task-desc\");\nconst modalTaskDate = document.getElementById(\"modal-task-date\");\n\n// Function to open the modal and display task details\nfunction openModal(task) {\n  const taskTitle = task.querySelector(\".task-text\").textContent;\n  const taskDesc = task.querySelector(\".task-desc\").textContent;\n  const taskDate = task.querySelector(\".task-date\").textContent;\n\n  modalTaskTitle.textContent = taskTitle;\n  modalTaskDesc.textContent = taskDesc;\n  modalTaskDate.textContent = taskDate;\n\n  modal.style.display = \"flex\"; // Show modal\n}\n\nconst modalEdit = document.getElementById(\"edit-task-modal\");\nconst closeEditModal = document.getElementById(\"edit-close-modal\");\n\nfunction editModal(task) {\n  const inputTitle = modalEdit.querySelector(\"#title\");\n  const inputDesc = modalEdit.querySelector(\"#desc\");\n  const inputDate = modalEdit.querySelector(\"#date\");\n\n  inputTitle.value = task.querySelector(\".task-text\").textContent;\n  inputDesc.value = task.querySelector(\".task-desc\").textContent;\n  inputDate.value = task.querySelector(\".task-date\").textContent;\n\n  modalEdit.style.display = \"flex\"; // Show modal\n\n  const saveChanges = () => {\n    task.querySelector(\".task-text\").textContent = inputTitle.value;\n    task.querySelector(\".task-desc\").textContent = inputDesc.value;\n    task.querySelector(\".task-date\").textContent = inputDate.value;\n    modalEdit.style.display = \"none\";\n    saveTasksToStorage(); // Save after editing\n  };\n\n  modalEdit.querySelector(\"#save-edit\").addEventListener(\"click\", saveChanges, { once: true });\n}\n\ncloseEditModal.addEventListener(\"click\", () => {\n  modalEdit.style.display = \"none\";\n});\n\n// Event listener for closing the modal\ncloseModal.addEventListener(\"click\", () => {\n  modal.style.display = \"none\";\n});\n\n// Event listener for closing the modal when clicking outside the modal\nwindow.addEventListener(\"click\", (event) => {\n  if (event.target === modal) {\n    modal.style.display = \"none\";\n  }\n});\n\n\nclass Task {\n  constructor(taskTitle) {\n    this.taskTitle = taskTitle;\n  }\n  \n  createTask(taskId) {\n    const taskList = document.querySelector(\".task-list\");\n    const taskTitle = this.taskTitle.trim();\n\n    const taskDiv = document.createElement(\"div\");\n    taskDiv.classList.add(\"task\");\n\n    const taskContainerDiv = document.createElement(\"div\");\n    taskContainerDiv.classList.add(\"task-container\");\n\n    const checkbox = document.createElement(\"input\");\n    checkbox.type = \"checkbox\";\n    checkbox.id = `check-task-${taskId}`;\n    checkbox.classList.add(\"task-checkbox\");\n\n    checkbox.addEventListener('change', function () {\n      updateCounter(\"active\");\n    });\n\n    const label = document.createElement(\"label\");\n    label.htmlFor = `check-task-${taskId}`;\n    label.classList.add(\"task-checkmark\");\n\n    const title = document.createElement(\"p\");\n    title.classList.add(\"task-text\");\n    title.textContent = taskTitle;\n\n    const description = document.createElement(\"p\");\n    description.classList.add(\"task-desc\");\n\n    const date = document.createElement(\"p\");\n    date.classList.add(\"task-date\");\n\n    const removeBtn = document.createElement(\"button\");\n    removeBtn.classList.add(\"remove-btn\");\n\n    const removeSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    removeSvg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    removeSvg.setAttribute(\"width\", \"18\");\n    removeSvg.setAttribute(\"height\", \"18\");\n    removeSvg.setAttribute(\"viewBox\", \"0 0 18 18\");\n\n    const removePath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    removePath.setAttribute(\"fill\", \"#494C6B\");\n    removePath.setAttribute(\"fill-rule\", \"evenodd\");\n    removePath.setAttribute(\"d\", \"M16.97 0l.708.707L9.546 8.84l8.132 8.132-.707.707-8.132-8.132-8.132 8.132L0 16.97l8.132-8.132L0 .707.707 0 8.84 8.132 16.971 0z\");\n\n    removeSvg.appendChild(removePath);\n\n    removeBtn.appendChild(removeSvg);\n\n    removeBtn.addEventListener('click', removeTask.bind(null, checkbox));\n\n    // Edit button\n    const editBtn = document.createElement(\"button\");\n    editBtn.classList.add(\"edit-btn\");\n\n    const editSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    editSvg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n    editSvg.setAttribute(\"height\", \"24\");\n    editSvg.setAttribute(\"width\", \"24\");\n    editSvg.setAttribute(\"fill\", \"#494C6B\");\n    editSvg.setAttribute(\"viewBox\", \"0 -960 960 960\");\n\n    const editPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n    editPath.setAttribute(\n      \"d\",\n      \"M160-400v-80h280v80H160Zm0-160v-80h440v80H160Zm0-160v-80h440v80H160Zm360 560v-123l221-220q9-9 20-13t22-4q12 0 23 4.5t20 13.5l37 37q8 9 12.5 20t4.5 22q0 11-4 22.5T863-380L643-160H520Zm263-224 37-39-37-37-38 38 38 38Z\"\n    );\n\n    editSvg.appendChild(editPath);\n    editBtn.appendChild(editSvg);\n\n\n    taskContainerDiv.appendChild(removeBtn);\n    taskContainerDiv.appendChild(checkbox);\n    taskContainerDiv.appendChild(label);\n    taskContainerDiv.appendChild(title);\n    taskContainerDiv.appendChild(editBtn);\n    taskContainerDiv.appendChild(description);\n    taskContainerDiv.appendChild(date);\n\n    editBtn.addEventListener(\"click\", () => editModal(taskDiv));\n\n    title.addEventListener(\"click\", () => openModal(taskDiv));\n\n    taskDiv.appendChild(taskContainerDiv);\n\n    taskList.appendChild(taskDiv);\n    \n    saveTasksToStorage();\n  }\n}\n\nlet taskIndex = 0;\nconst addTask = (event) => {\n  if (event.key === 'Enter') {\n    const taskTitle = inputField.value;\n    if (taskTitle === \"\") {\n      return;\n    }\n    const task = new Task(taskTitle);\n    taskIndex++;\n    inputField.value = \"\";\n    task.createTask(taskIndex);\n    if(taskList.classList.contains('completed-active')) {\n      filterCompleted.click();\n      updateCounter(\"completed\");\n    } else {\n      updateCounter(\"active\");\n    }\n  }\n}\n\nconst inputField = document.querySelector('#input');\ninputField.addEventListener('keypress', addTask);\n\n\n// Event listener for the clear button\nclearBtn.addEventListener('click', function () {\n  const checkboxes = taskList.querySelectorAll(\".task-checkbox:checked\"); // Get all checked checkboxes\n  checkboxes.forEach(checkbox => {\n    const taskDiv = checkbox.closest(\".task\"); // Get the parent task div\n    taskDiv.remove(); // Remove the task div\n  });\n  saveTasksToStorage();\n  if(taskList.classList.contains('completed-active')) {\n    updateCounter(\"completed\");\n  } else {\n    updateCounter(\"active\");\n  }\n});\n\n// Filter Functions\nfilterAll.addEventListener('click', function () {\n  resetButtonStyles();\n  taskList.classList.remove('completed-active');\n  filterAll.style.color = \"#3A7CFD\";\n  const tasks = document.querySelectorAll('.task');\n  tasks.forEach(task => {\n    task.style.display = 'flex';\n    const checkbox = task.querySelector('.task-checkbox');\n    checkbox.addEventListener('change', function () {\n      task.style.display = 'flex'\n      updateCounter(\"active\");\n    });\n  }); // Show all tasks\n  updateCounter(\"active\");\n});\n\nfilterActive.addEventListener('click', function () {\n  resetButtonStyles();\n  taskList.classList.remove('completed-active');\n  filterActive.style.color = \"#3A7CFD\";\n  const tasks = document.querySelectorAll('.task');\n  tasks.forEach(task => {\n    const checkbox = task.querySelector('.task-checkbox');\n    if (checkbox.checked) {\n      task.style.display = 'none'; // Hide completed tasks\n    } else {\n      task.style.display = 'flex'; // Show active tasks\n    }\n\n    checkbox.addEventListener('change', function () {\n      if (checkbox.checked) {\n        task.style.display = 'none';\n        updateCounter(\"active\");\n      }\n    });\n  });\n  updateCounter(\"active\");\n});\n\nfilterCompleted.addEventListener('click', function () {\n  resetButtonStyles();\n  taskList.classList.add('completed-active');\n  filterCompleted.style.color = \"#3A7CFD\";\n  const tasks = document.querySelectorAll('.task');\n  tasks.forEach(task => {\n    const checkbox = task.querySelector('.task-checkbox');\n\n    if (checkbox.checked) {\n      task.style.display = 'flex';\n    } else {\n      task.style.display = 'none';\n    }\n\n    checkbox.addEventListener('change', function () {\n      if (!checkbox.checked) {\n        updateCounter(\"completed\");\n        task.style.display = 'none';\n      }\n    });\n  });\n  updateCounter(\"completed\");\n});\n\ndocument.querySelector('.task-list').addEventListener('change', (e) => {\n  if (e.target.classList.contains('task-checkbox')) {\n    saveTasksToStorage();\n  }\n});\n\ndocument.addEventListener('DOMContentLoaded', loadTasksFromStorage);\n\n\nlet lightmode = localStorage.getItem('lightmode');\nconst themeSwitch = document.getElementById('theme-sw');\n\nconst enableLightMode = () => {\n  document.body.classList.add(\"lightmode\");\n  localStorage.setItem(\"lightmode\", \"active\");\n}\n\nconst disableLightMode = () => {\n  document.body.classList.remove(\"lightmode\");\n  localStorage.setItem(\"lightmode\", null);\n}\n\nif (lightmode === \"active\") enableLightMode();\n\nthemeSwitch.addEventListener(\"click\", () => {\n  lightmode = localStorage.getItem('lightmode');\n  lightmode !== \"active\" ? enableLightMode() : disableLightMode();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/index.js"]();
/******/ 	
/******/ })()
;